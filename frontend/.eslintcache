[{"C:\\dev\\deliciuos-react-clear\\frontend\\src\\index.js":"1","C:\\dev\\deliciuos-react-clear\\frontend\\src\\App.jsx":"2","C:\\dev\\deliciuos-react-clear\\frontend\\src\\reportWebVitals.js":"3","C:\\dev\\deliciuos-react-clear\\frontend\\src\\store\\index.js":"4","C:\\dev\\deliciuos-react-clear\\frontend\\src\\pages\\BitnodeApp\\BitnodeApp.jsx":"5","C:\\dev\\deliciuos-react-clear\\frontend\\src\\pages\\BitnodeDetails\\BitnodeDetails.jsx":"6","C:\\dev\\deliciuos-react-clear\\frontend\\src\\pages\\BitnodeEdit\\BitnodeEdit.jsx":"7","C:\\dev\\deliciuos-react-clear\\frontend\\src\\pages\\HomePage\\HomePage.jsx":"8","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\AppFooter\\AppFooter.jsx":"9","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\AppHeader\\AppHeader.jsx":"10","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\socket-service.js":"11","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\eventBusService.js":"12","C:\\dev\\deliciuos-react-clear\\frontend\\src\\store\\reducers\\bitnodeReducer.js":"13","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\bitnodeService.js":"14","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\storageService.js":"15","C:\\dev\\deliciuos-react-clear\\frontend\\src\\store\\actions\\bitnodeActions.js":"16","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\BitnodeList\\BitnodeList.jsx":"17","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\BitnodeFilter\\BitnodeFilter.jsx":"18","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\ChatApp\\ChatApp.jsx":"19","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\element-ui\\MultiSelect.jsx":"20","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\InputList\\InputList.jsx":"21","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\HttpService.js":"22","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\customHooks.js":"23","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\BitnodePreview\\BitnodePreview.jsx":"24"},{"size":625,"mtime":1641377248527,"results":"25","hashOfConfig":"26"},{"size":937,"mtime":1642449822115,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1641377248543,"results":"28","hashOfConfig":"26"},{"size":407,"mtime":1642416815371,"results":"29","hashOfConfig":"26"},{"size":2850,"mtime":1642423382662,"results":"30","hashOfConfig":"26"},{"size":8075,"mtime":1642416823004,"results":"31","hashOfConfig":"26"},{"size":3710,"mtime":1642506389643,"results":"32","hashOfConfig":"26"},{"size":4154,"mtime":1642446465574,"results":"33","hashOfConfig":"26"},{"size":246,"mtime":1642449964941,"results":"34","hashOfConfig":"26"},{"size":3931,"mtime":1642417045579,"results":"35","hashOfConfig":"26"},{"size":666,"mtime":1641377249254,"results":"36","hashOfConfig":"26"},{"size":407,"mtime":1641377249222,"results":"37","hashOfConfig":"26"},{"size":1053,"mtime":1642416836203,"results":"38","hashOfConfig":"26"},{"size":3119,"mtime":1642429761176,"results":"39","hashOfConfig":"26"},{"size":348,"mtime":1641377249254,"results":"40","hashOfConfig":"26"},{"size":1480,"mtime":1642416836203,"results":"41","hashOfConfig":"26"},{"size":564,"mtime":1642429829566,"results":"42","hashOfConfig":"26"},{"size":797,"mtime":1642416823006,"results":"43","hashOfConfig":"26"},{"size":3187,"mtime":1642416823005,"results":"44","hashOfConfig":"26"},{"size":3365,"mtime":1641377249022,"results":"45","hashOfConfig":"26"},{"size":2980,"mtime":1642426617536,"results":"46","hashOfConfig":"26"},{"size":1045,"mtime":1642429610547,"results":"47","hashOfConfig":"26"},{"size":460,"mtime":1641377249207,"results":"48","hashOfConfig":"26"},{"size":811,"mtime":1642498854680,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1pdi5wi",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"52"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"52"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"52"},"C:\\dev\\deliciuos-react-clear\\frontend\\src\\index.js",[],["114","115"],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\App.jsx",["116","117"],"import { HashRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { BitnodeApp } from './pages/BitnodeApp/BitnodeApp'\nimport { BitnodeDetails } from './pages/BitnodeDetails/BitnodeDetails';\nimport \"./assets/scss/global.scss\";\nimport { AppHeader } from './cmps/AppHeader/AppHeader';\nimport { HomePage } from './pages/HomePage/HomePage'\nimport { BitnodeEdit } from './pages/BitnodeEdit/BitnodeEdit';\nimport { AppFooter } from './cmps/AppFooter/AppFooter'\n\nexport function App() {\n  return (\n    <div className=\"App main-container\">\n      <Router>\n        <AppHeader />\n        <Switch>\n          <Route path=\"/bitnode/edit/:id?\"  component={BitnodeEdit} />\n          {/* <Route path=\"/bitnode/:id\"  component={BitnodeDetails} /> */}\n          <Route path=\"/bitnode\"  component={BitnodeApp} />\n          <Route path=\"/\"  component={HomePage} />\n        </Switch>\n        <AppFooter />\n      </Router>\n    </div>\n  );\n}","C:\\dev\\deliciuos-react-clear\\frontend\\src\\reportWebVitals.js",[],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\store\\index.js",[],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\pages\\BitnodeApp\\BitnodeApp.jsx",["118","119","120","121"],"\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { BitnodeFilter } from '../../cmps/BitnodeFilter/BitnodeFilter';\nimport { BitnodeList } from '../../cmps/BitnodeList/BitnodeList';\nimport bitnodeService from '../../services/bitnodeService';\nimport { loadBitnodes } from '../../store/actions/bitnodeActions';\nimport Select from 'react-select'\n// import ReactSelect from '../../cmps/react-select'\nimport './BitnodeApp.scss'\nimport plus from '../../assets/icons/plus.png'\n\nexport function BitnodeApp(props) {\n    const [filterBy, setFilterBy] = useState(null)\n    var bitnodes = useSelector(state => state.bitnodeReducer.bitnodes)\n    console.log(props.location.search);\n    if (props.location.search) {\n        var res = props.location.search.substring(1)\n        var resArr = res.split('=')\n        const field = resArr[0]\n        const value = resArr[1]\n        if (field === 'term') {\n            const term = value.toLocaleLowerCase()\n            bitnodes = bitnodes.filter(bitnode => {\n                return bitnode.title.toLocaleLowerCase().includes(term) ||\n                    bitnode.description.toLocaleLowerCase().includes(term)\n            })\n        } else {\n            bitnodes = bitnodes.filter(bitnode => {\n                console.log(bitnode[field]);\n                if (field === 'author') return bitnode[field].name === value.replace('%20', ' ')\n                return bitnode[field].includes(value)\n            })\n        }\n    }\n\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        console.log('effect');\n        dispatch(loadBitnodes(filterBy))\n    }, [filterBy])\n\n    const onSetFilter = (filterBy) => {\n        setFilterBy(filterBy)\n    }\n\n    const onSelectBitnode = (selectedBitnodeId) => {\n        console.log(selectedBitnodeId);\n        props.history.push(`/bitnode/edit/${selectedBitnodeId}`)\n    }\n\n    return (\n        <div className=\"bitnode-app flex column align-center\">\n            <Link className=\"add-btn btn\" to=\"/bitnode/edit\"><img src={plus} /></Link>\n            <section className=\"filter text-center flex column auto-center\">\n                <h1>Bitnodes</h1>\n                <BitnodeFilter onSetFilter={onSetFilter} />\n            </section>\n            {bitnodes && <BitnodeList onSelectBitnode={onSelectBitnode} bitnodes={bitnodes} />}\n        </div>\n    )\n}\n\n// function mapStateToProps(state) {\n//     return {\n//         bitnodes: state.bitnodeReducer.bitnodes\n//         // If we want to filter the bitnodes first \"like computed\" but not really\n//         // bitnodes: getBitnodesForDisplay(state.bitnodeReducer.bitnodes)\n//     }\n// }\n// const mapDispatchToProps = {\n//     loadBitnodes\n// }\n// export const BitnodeApp = connect(mapStateToProps, mapDispatchToProps)(_BitnodeApp)\n","C:\\dev\\deliciuos-react-clear\\frontend\\src\\pages\\BitnodeDetails\\BitnodeDetails.jsx",["122","123","124","125","126","127"],"\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { getById, updateBitnode } from '../../store/actions/bitnodeActions'\nimport { eventBus } from '../../services/eventBusService'\nimport bitnodeService from '../../services/bitnodeService'\nimport { storageService } from '../../services/storageService'\nimport './BitnodeDetails.scss'\nimport back from '../../assets/icons/back.png'\nimport edit from '../../assets/icons/edit.png'\nimport { ChatApp } from '../../cmps/ChatApp/ChatApp'\nimport socketService from '../../services/socket-service.js'\nimport TextField from '@material-ui/core/TextField'\nimport Moment from 'react-moment';\n\nclass _BitnodeDetails extends Component {\n    state = {\n        bitnode: null,\n        errMsg: '',\n        review: { from: \"\", txt: \"\" },\n    }\n    async componentDidMount() {\n        await this.loadBitnode()\n    }\n    // componentWillUnmount() {\n    //     socketService.terminate()\n    // }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.match.params.id !== this.props.match.params.id) {\n            this.loadBitnode()\n        }\n    }\n    async loadBitnode() {\n        await this.props.getById(this.props.match.params.id)\n        console.log(this.props.bitnode);\n        // const bitnode = await bitnodeService.getById(this.props.match.params.id)\n        // this.setState({ bitnode })\n    }\n    handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.type === 'number' ? +target.value : target.value\n        console.log(value);\n        this.setState(prevState => ({ review: { ...prevState.review, [field]: value } }))\n    }\n\n    addReview = async (ev) => {\n        ev.preventDefault()\n        var bitnodeToUpdate = { ...this.props.bitnode }\n        if (!bitnodeToUpdate.reviews) bitnodeToUpdate.reviews = []\n        var review = { ...this.state.review }\n        if (review.from === '') review.from = 'Guest'\n        if (review.txt === '') {\n            this.setState({ errMsg: 'Invalid review' })\n            setTimeout(() => {\n                this.setState({ errMsg: '' })\n            }, 3000)\n            return\n        }\n        review.createdAt = Date.now()\n        bitnodeToUpdate.reviews.push({ ...review })\n        this.setState({ bitnode: { ...bitnodeToUpdate } })\n        await this.props.updateBitnode(bitnodeToUpdate)\n        await this.loadBitnode()\n        this.setState({ review: { from: \"\", txt: \"\" } })\n    }\n\n    render() {\n        const { bitnode } = this.props\n        const { errMsg, review } = this.state\n        if (!bitnode) return <div>Loading...</div>\n        return <div className=\"bitnode-details flex column align-center\">\n            <section className=\"btns flex justify-center\">\n                <button className=\"btn\" onClick={(ev) => {\n                    ev.stopPropagation()\n                    this.props.history.goBack()\n                }}><img src={back} alt=\"\" /></button>\n                <button className=\"btn\" onClick={() => this.props.history.push('/bitnode/edit/' + bitnode._id)}><img src={edit} /></button>\n            </section>\n            <h1 className=\"title mb15 text-center\">{bitnode.title}</h1>\n            <div className=\"contant flex align-center\">\n                <section className=\"left mr10 flex column align-center\">\n                    <h2>Description:</h2>\n                    <p className=\"text-center mb15\">{bitnode.description}</p>\n                    <h2>Ingredients:</h2>\n                    <ul className=\"bitnode-list ingredients \">\n                        {\n                            bitnode.ingredients.map((ingredient, idx) => <li className=\"ingredient\" key={idx}>{ingredient}</li>)\n                        }\n                    </ul>\n                    <section className=\"extra-details flex\">\n                        <div className=\"summary-item-wrapper flex align-center\">\n                            <div className=\"bitnode-summery-item flex column text-center\">\n                                <span>{bitnode.ingredients.length}</span>\n                                <span>Ingredients</span>\n                            </div>\n                            <div className=\"bitnode-summery-item flex column text-center\">\n                                <span>{bitnode.time}</span>\n                                <span>Minutes</span>\n                            </div>\n                            <div className=\"bitnode-summery-item flex column text-center\">\n                                <span>{bitnode.calories}</span>\n                                <span>Calories</span>\n                            </div>\n                            <div className=\"bitnode-summery-item flex column text-center\">\n                                <span>{bitnode.servings}</span>\n                                <span>Servings</span>\n                            </div>\n                        </div>\n                        <div className=\"tags-container flex column align-center\">\n                            <h2>Tags:</h2>\n                            <ul className=\"clean-list mb15 tags flex auto-center wrap\">\n                                {\n                                    bitnode.tags.map((tag, idx) => <p className=\"tag\" key={idx}>{tag}</p>)\n                                }\n                            </ul>\n                        </div>\n                    </section>\n                </section>\n                <section className=\"right flex column auto-center\">\n                    <img className=\"bitnode-img mb15\" src={bitnode.imgUrl} alt=\"\" />\n                    <div className=\"chat-app-desktop\">\n                        <ChatApp bitnodeId={bitnode._id}></ChatApp>\n                    </div>\n                </section>\n            </div>\n            <section className=\"funcs flex column align-center\">\n                <section className=\"reviews flex column auto-center\">\n                    <h2 className=\"mb15 text-center\">Reviews:</h2>\n                    <section className=\"reviews-container flex justify-center\">\n                        <div className=\"add-review\">\n                            <h4 className=\"mb15 text-center\">Add Review</h4>\n                            <form onSubmit={this.addReview} className=\"add-review-form flex column align-center\">\n                                <TextField className=\"input-from\" label=\"Enter your name\" type=\"text\" name=\"from\" value={review.from} onChange={this.handleChange} />\n                                <TextField className=\"input-msg\" id=\"outlined-multiline-static\" variant=\"outlined\" label=\"Enter your review\" type=\"text\" name=\"txt\" value={review.txt} onChange={this.handleChange} />\n                                <button className=\"btn\" onClick={this.addReview}>Add review</button>\n                            </form>\n                            <p>{errMsg}</p>\n                        </div>\n                        {bitnode.reviews && bitnode.reviews.length > 0 ? <div className=\"review-list flex wrap mb15\">\n                            {bitnode.reviews.map(({ from, txt, createdAt }, index) => (\n                                <div className=\"review\" key={index}>\n                                    <h4>{from}: <span className=\"review-txt\">{txt}</span></h4>\n                                    <h5><Moment fromNow>{createdAt}</Moment></h5>\n                                </div>\n                            ))}\n                        </div> : <div className=\"default-review-list flex auto-center\"><h1>No reviews yet, be the first!</h1></div>}\n                    </section>\n                </section>\n                <div className=\"chat-app-mobile\">\n                    <ChatApp bitnodeId={bitnode._id}></ChatApp>\n                </div>\n\n            </section>\n        </div >\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        bitnode: state.bitnodeReducer.currBitnode,\n\n    }\n}\nconst mapDispatchToProps = {\n    getById,\n    updateBitnode,\n\n}\nexport const BitnodeDetails = connect(mapStateToProps, mapDispatchToProps)(_BitnodeDetails)\n\n","C:\\dev\\deliciuos-react-clear\\frontend\\src\\pages\\BitnodeEdit\\BitnodeEdit.jsx",["128","129","130"],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\pages\\HomePage\\HomePage.jsx",["131","132","133","134","135","136","137","138","139","140","141","142"],"\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom'\nimport { BitnodeList } from '../../cmps/BitnodeList/BitnodeList';\nimport { loadBitnodes } from '../../store/actions/bitnodeActions';\n\nimport bitnodeService from '../../services/bitnodeService';\nimport './HomePage.scss'\nimport hero from '../../assets/imgs/hero.jpg'\nimport search from '../../assets/icons/search.png'\nexport function HomePage(props) {\n    const [term, setTerm] = useState('')\n    const bitnodes = useSelector(state => state.bitnodeReducer.bitnodes)\n    const dispatch = useDispatch()\n    useEffect(() => {\n        console.log('effect');\n        dispatch(loadBitnodes())\n    }, [])\n\n    var bitnodesToShow = []\n    bitnodesToShow = bitnodes.slice(0, 3)\n    function bitnodesToShowByTag(tag) {\n        return bitnodes.filter(bitnode => bitnode.tags.includes(tag)).splice(0, 3)\n    }\n    const onSelectBitnode = (selectedBitnodeId) => {\n        props.history.push(`/bitnode/${selectedBitnodeId}`)\n    }\n    const handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.type === 'number' ? +target.value : target.value\n        console.log(value);\n        setTerm(value)\n    }\n    const searchBitnodes = (ev) => {\n        ev.preventDefault()\n        props.history.push(`/bitnode?term=${term}`)\n    }\n    return (\n        <section className=\"home-page flex column align-center full\">\n            <div className=\"img-container mb15\">\n                <section className=\"contant flex column auto-center text-center\">\n                    <section className=\"hero-text flex column auto-center text-center mb15\">\n                        <h2>Welcome To Bitnodes</h2>\n                        <h4>Let's estimate the size of the Bitcoin network by finding all the reachable nodes in the network</h4>\n                    </section>\n                    {/* <form className=\"flex\" onSubmit={searchBitnodes}>\n                        <input type=\"text\" placeholder=\"Find a bitnode\" name=\"term\" value={term} onChange={handleChange} />\n                        <img onClick={searchBitnodes} src={search} alt=\"\"  />\n                    </form>\n                    <section className=\"nav-btns flex wrap auto-center\">\n                        <button onClick={() => props.history.push(`/bitnode?tags=Quick`)}>Quick</button>\n                        <button onClick={() => props.history.push(`/bitnode?tags=Vegetarian`)}>Vegeterian</button>\n                        <button onClick={() => props.history.push(`/bitnode?tags=Dinner`)}>Dinner</button>\n                        <button onClick={() => props.history.push(`/bitnode`)}>Show All</button>\n                    </section> */}\n                </section>\n            </div>\n            <div className=\"nav-btns flex width-80 align-center space-around wrap height-100\">\n                <button onClick={() => props.history.push('/bitnode')}>Bitnodes List</button>\n                <button onClick={() => props.history.push('/bitnode/edit')}>Add Bitnode!</button>\n            </div>\n            {/* <section className=\"previews\">\n                <section className=\"nav-contant flex align-center space-between\">\n                    <h3>Dinner</h3>\n                    <h3><Link to=\"/bitnode\">Show All</Link></h3>\n                </section>\n                <div className=\"contant flex column\">\n                    {bitnodesToShowByTag('Dinner') && <BitnodeList onSelectBitnode={onSelectBitnode} bitnodes={bitnodesToShowByTag('Dinner')} />}\n                </div>\n            </section>\n            <section className=\"previews\">\n                <section className=\"nav-contant flex align-center space-between\">\n                    <h3>Vegetarian</h3>\n                    <h3><Link to=\"/bitnode\">Show All</Link></h3>\n                </section>\n                <div className=\"contant flex column\">\n                    {bitnodesToShowByTag('Vegetarian') && <BitnodeList onSelectBitnode={onSelectBitnode} bitnodes={bitnodesToShowByTag('Vegetarian')} />}\n                </div>\n            </section> */}\n        </section>\n    )\n}\n\n","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\AppFooter\\AppFooter.jsx",["143"],"\nimport React, { Component } from 'react'\n\nimport './AppFooter.scss'\n\nexport function AppFooter() {\n    return (\n        <footer className=\"flex auto-center full\">\n            <small>Copyright by Nadav Komornik</small>\n        </footer>\n    )\n}\n\n","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\AppHeader\\AppHeader.jsx",["144"],"\nimport './AppHeader.scss'\nimport { useEffect, useState } from 'react';\nimport { NavLink, withRouter } from 'react-router-dom'\nimport { eventBus } from '../../services/eventBusService.js';\nimport { storageService } from '../../services/storageService';\nimport search from '../../assets/icons/search.png'\nimport { Dropdown } from 'element-react';\n// import { Button } from 'element-react';\nimport 'element-theme-default';\nfunction _AppHeader(props) {\n    useEffect(() => {\n        console.log('effect');\n        eventBus.on('details mounted', () => {\n            console.log('Details is now mounted');\n        })\n    }, [])\n\n    var [className, setClassName] = useState('none')\n    var [term, setTerm] = useState('')\n\n    const toHome = () => {\n        props.history.push('/')\n    }\n    let last_known_scroll_position = 0;\n    let ticking = false;\n\n    function doSomething(scroll_pos) {\n        if (scroll_pos > 125) {\n            setClassName('flex')\n        }\n        if (scroll_pos < 125) {\n            setClassName('none')\n        }\n    }\n\n    document.addEventListener('scroll', function (e) {\n        last_known_scroll_position = window.scrollY;\n        if (!ticking) {\n            window.requestAnimationFrame(function () {\n                doSomething(last_known_scroll_position);\n                ticking = false;\n            });\n\n            ticking = true;\n        }\n    });\n\n    const handleTerm = ({ target }) => {\n        setTerm(target.value)\n    }\n    const searchByTerm = (ev) => {\n        ev.preventDefault()\n        props.history.push(`/bitnode?term=${term}`)\n    }\n    return (\n        <section className=\"app-header flex space-between align-center full\">\n            <p className=\"hover-pointer logo\" onClick={toHome}>bitcoin-nodes</p>\n            {/* <NavLink className=\"hover-pointer logo\" to=\"/\">bitcoin-nodes</NavLink> */}\n\n            <form className={className + ' filter align-center'} onSubmit={searchByTerm}>\n                <input name=\"term\" placeholder=\"Free Search\" value={term} type=\"text\" onChange={handleTerm} />\n                <img onClick={searchByTerm} src={search} alt=\"\" />\n            </form>\n\n            <nav className=\"main-nav flex\" >\n                <NavLink to=\"/bitnode/edit\">Add Bitnode!</NavLink>\n                <NavLink exact to=\"/bitnode\">Bitnodes List</NavLink>\n            </nav>\n            {/* <Button type=\"primary\">Hello</Button> */}\n            <Dropdown className=\"main-nav-mobile\" menu={(\n                <Dropdown.Menu>\n                    <Dropdown.Item><NavLink exact to=\"/bitnode\">Bitnodes List</NavLink></Dropdown.Item>\n                    <Dropdown.Item><NavLink to=\"/bitnode/edit\">Add Bitnode!</NavLink></Dropdown.Item>\n                </Dropdown.Menu>\n            )}\n            >\n                <span className=\"el-dropdown-link\">\n                    <i className=\"el-icon-caret-bottom el-icon--right\"></i>\n                </span>\n            </Dropdown>\n        </section>\n    )\n}\nexport const AppHeader = withRouter(_AppHeader)\n\n\n// class _AppHeader extends Component {\n//     componentDidMount() {\n//         eventBus.on('details mounted', () => {\n//             console.log('Details is now mounted');\n//         })\n//     }\n//     toHome = () => {\n//         this.props.history.push('/')\n//     }\n//     render() {\n//         return (\n//             <section className=\"app-header flex space-between align-center full\">\n//                 <p className=\"hover-pointer logo\" onClick={this.toHome}>mister bitcoin</p>\n//                 <nav className=\"main-nav flex\" >\n//                     <NavLink to=\"/signup\">{storageService.load('CURR_USER') ? 'logout' : 'signup'}</NavLink>\n//                     <NavLink to=\"/bitnode\">Bitnodes List</NavLink>\n//                     <NavLink to=\"/statistic\">Statistic charts</NavLink>\n//                 </nav>\n//             </section>\n//         )\n//     }\n// }\n// export const AppHeader = withRouter(_AppHeader)\n\n","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\socket-service.js",["145"],"import io from 'socket.io-client';\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/' :\r\n    '//localhost:3030'\r\nvar socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n}\r\n\r\nfunction setup() {\r\n    console.log('setUp');\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    console.log('terminate');\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    console.log('on');\r\n    socket.on(eventName, cb)\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    console.log('Off');\r\n    socket.off(eventName, cb)\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    console.log('emit', data);\r\n    socket.emit(eventName, data)\r\n}","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\eventBusService.js",[],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\store\\reducers\\bitnodeReducer.js",[],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\bitnodeService.js",["146","147","148"],"import { storageService } from \"./storageService.js\";\nimport HttpService from './HttpService.js'\nexport default {\n    query,\n    getById,\n    remove,\n    save,\n    getEmptyBitnode\n}\n\nasync function query(filterBy = null) {\n    // return new Promise((resolve, reject) => {\n    //     if(storageService.load('BITNODES')) {\n    //         var bitnodesToReturn = storageService.load('BITNODES');\n    //     } else {\n    //         bitnodesToReturn = bitnodes;\n    //         storageService.store('BITNODES', bitnodes)\n    //     }\n    //     if (filterBy && filterBy.term) {\n    //         bitnodesToReturn = filter(filterBy.term)\n    //     }\n    //     resolve(sort([...bitnodesToReturn]))\n    // })\n    var bitnodes = await HttpService.get('bitnode')\n    if (filterBy && filterBy.term) {\n        console.log(bitnodes);\n        bitnodes = filter(filterBy.term, bitnodes)\n    }\n    return Promise.resolve(bitnodes)\n        // return HttpService.get('bitnode')\n}\n\nfunction getById(id) {\n    // return new Promise((resolve, reject) => {\n    //     const bitnode = bitnodes.find(bitnode => bitnode._id === id)\n    //     bitnode ? resolve(bitnode) : reject(`Bitnode id ${id} not found!`)\n    // })\n    return HttpService.get(`bitnode/${id}`)\n}\n\nfunction remove(bitnodeId) {\n    // return new Promise((resolve, reject) => {\n    //     const index = bitnodes.findIndex(bitnode => bitnode._id === id)\n    //     if (index !== -1) {\n    //         bitnodes.splice(index, 1)\n    //         storageService.store('BITNODES', bitnodes)\n    //     }\n    //     resolve(bitnodes)\n    // })\n    return HttpService.delete(`bitnode/${bitnodeId}`)\n}\n\nfunction _updateBitnode(bitnode) {\n    // return new Promise((resolve, reject) => {\n    //     const index = bitnodes.findIndex(c => bitnode._id === c._id)\n    //     if (index !== -1) {\n    //         bitnodes[index] = bitnode\n    //         storageService.store('BITNODES', bitnodes)\n    //     }\n    //     resolve(bitnode)\n    // })\n    bitnode.updatedAt = Date.now()\n    return HttpService.put(`bitnode/${bitnode._id}`, bitnode)\n}\n\nfunction _addBitnode(bitnode) {\n    // return new Promise((resolve, reject) => {\n    //     bitnode._id = _makeId()\n    //     bitnodes.push(bitnode)\n    //     storageService.store('BITNODES', bitnodes)\n    //     resolve(bitnode)\n    // })\n    bitnode.createdAt = Date.now()\n    return HttpService.post(`bitnode`, bitnode)\n\n}\n\nfunction save(bitnode) {\n    return bitnode._id ? _updateBitnode(bitnode) : _addBitnode(bitnode)\n}\n\nfunction getEmptyBitnode() {\n    return {\n        ipAddress: '',\n        port: '',\n        status: ''\n    }\n}\n\nfunction filter(term, bitnodes) {\n    term = term.toLocaleLowerCase()\n    return bitnodes.filter(bitnode => {\n        return bitnode.ipAddress.toLocaleLowerCase().includes(term) || bitnode.port.toLocaleLowerCase().includes(term)\n    })\n}\n\n\n\nfunction _makeId(length = 10) {\n    var txt = ''\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length))\n    }\n    return txt\n}","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\storageService.js",[],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\store\\actions\\bitnodeActions.js",[],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\BitnodeList\\BitnodeList.jsx",["149"],"import { useEffect } from 'react';\nimport { BitnodePreview } from '../BitnodePreview/BitnodePreview';\nimport './BitnodeList.scss'\nexport function BitnodeList({ bitnodes, onSelectBitnode }) {\n  useEffect(() => {\n    console.log(bitnodes);\n  }, [])\n  return bitnodes.length ? (\n    <ul className=\"bitnode-list clean-list flex wrap auto-center \">\n      {\n        bitnodes.map(bitnode => <BitnodePreview onSelectBitnode={onSelectBitnode} bitnode={bitnode} key={bitnode._id} />)\n      }\n    </ul>\n  ) : <div className=\"bitnode-list-default\">There is no bitnodes</div>\n}","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\BitnodeFilter\\BitnodeFilter.jsx",[],"C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\ChatApp\\ChatApp.jsx",["150","151","152","153","154"],"\nimport React, { useState, useEffect } from 'react'\nimport io from 'socket.io-client'\nimport TextField from '@material-ui/core/TextField'\nimport './ChatApp.scss'\nimport socketService from '../../services/socket-service'\nimport { loadBitnodes } from '../../store/actions/bitnodeActions'\n// const socket = io.connect('http://localhost:3030')\nsocketService.setup()\n\nexport function ChatApp({ bitnodeId }) {\n    const [msgChat, setMsg] = useState({ message: '', name: '' })\n    const [topic, setTopic] = useState('MyTopic')\n    const [errMsg, setErrMsg] = useState('')\n    const [chat, setChat] = useState([])\n    \n    useEffect(() => {\n        socketService.emit(\"chat topic\", bitnodeId);\n    },[])\n    useEffect(() => {\n        socketService.on('chat newMsg', ({ name, message }) => {\n            setChat([{ name, message }, ...chat ])\n            console.log('chat', chat);    \n        })\n    })\n    \n    const onTextChange = e => {\n        setMsg({ ...msgChat, [e.target.name]: e.target.value })\n    }\n    const onMessageSubmit = e => {\n        e.preventDefault()\n        var { name, message } = msgChat\n        console.log({ name, message });\n        if (name === '') name = 'Guest'\n        if (message === '') {\n            setErrMsg('Invalid massage')\n            setTimeout(() => {\n                setErrMsg('')\n            }, 3000)\n            return\n        }\n        socketService.emit('chat newMsg', { name, message })\n        setMsg({ message: '', name })\n    }\n    const renderChat = () => {\n        return chat.map(({ name, message }, index) => (\n            <div className=\"msg\" key={index}>\n                <h4>\n                    {name}: <span>{message}</span>\n                </h4>\n            </div>\n        ))\n    }\n    \n    return (\n        <div className=\"chat-app mb15\">\n            <h2 className=\"title-chat text-center\">Live Chat:</h2>\n            <div className=\"content flex column align-center\">\n                <div className=\"main-chat\">\n                    {chat.length === 0 && <p className=\"text-center\">Here you can share and just talk.</p>}\n                    {chat.length > 0 && renderChat()}\n                </div>\n                <form className=\"flex column auto-center\" onSubmit={onMessageSubmit}>\n                    <div className=\"name-field mb15\">\n                        <TextField\n                            name=\"name\"\n                            onChange={e => onTextChange(e)}\n                            value={msgChat.name}\n                            label=\"Name\"\n                        />\n                    </div>\n                    <div>\n                        <TextField className=\"input-msg mb15\"\n                            name=\"message\"\n                            onChange={e => onTextChange(e)}\n                            value={msgChat.message}\n                            id=\"outlined-multiline-static\"\n                            variant=\"outlined\"\n                            label=\"Message\"\n                        />\n                    </div>\n                    <button className=\"btn\">Send Message</button>\n                    <p>{errMsg}</p>\n                </form>\n            </div>\n        </div>\n    )\n\n}\n\n","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\element-ui\\MultiSelect.jsx",["155","156","157","158","159","160"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Select from '@material-ui/core/Select';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Chip from '@material-ui/core/Chip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n        maxWidth: 300,\r\n    },\r\n    chips: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    chip: {\r\n        margin: 2,\r\n    },\r\n    noLabel: {\r\n        marginTop: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n    PaperProps: {\r\n        style: {\r\n            maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n            width: 250,\r\n        },\r\n    },\r\n};\r\n\r\nconst names = [\r\n    'Oliver Hansen',\r\n    'Van Henry',\r\n    'April Tucker',\r\n    'Ralph Hubbard',\r\n    'Omar Alexander',\r\n    'Carlos Abbott',\r\n    'Miriam Wagner',\r\n    'Bradley Wilkerson',\r\n    'Virginia Andrews',\r\n    'Kelly Snyder',\r\n];\r\n\r\nfunction getStyles(name, personName, theme) {\r\n    return {\r\n        fontWeight:\r\n            personName.indexOf(name) === -1\r\n                ? theme.typography.fontWeightRegular\r\n                : theme.typography.fontWeightMedium,\r\n    };\r\n}\r\n\r\nexport default function MultipleSelect({ currValues, values, change }) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [personName, setPersonName] = React.useState([]);\r\n\r\n    const handleChange = (event) => {\r\n        if(personName.length === 0) setPersonName(currValues);\r\n        setPersonName(event.target.value);\r\n        change(event)\r\n    };\r\n\r\n    const handleChangeMultiple = (event) => {\r\n        const { options } = event.target;\r\n        const value = [];\r\n        for (let i = 0, l = options.length; i < l; i += 1) {\r\n            if (options[i].selected) {\r\n                value.push(options[i].value);\r\n            }\r\n        }\r\n        setPersonName(value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-mutiple-checkbox-label\">Tag</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-mutiple-checkbox-label\"\r\n                    id=\"demo-mutiple-checkbox\"\r\n                    multiple\r\n                    name=\"tags\"\r\n                    value={personName}\r\n                    onChange={handleChange}\r\n                    input={<Input />}\r\n                    renderValue={(selected) => selected.join(', ')}\r\n                    MenuProps={MenuProps}\r\n                >\r\n                    {currValues && values.map((name) => (\r\n                        <MenuItem key={name} value={name}>\r\n                            <Checkbox checked={personName.indexOf(name) > -1 || currValues.indexOf(name) > -1} />\r\n                            <ListItemText primary={name} />\r\n                        </MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n}","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\InputList\\InputList.jsx",["161"],"import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport './InputList.scss'\r\nimport ReactListInput from 'react-list-input'\r\nimport bitnodeService from '../../services/bitnodeService'\r\n\r\nconst Input = ({ value, onChange, type = 'text' }) =>\r\n  <input type={type} value={value} onChange={e => onChange(e.target.value)} />\r\n\r\nexport class InputList extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.getProps = this.getProps.bind(this);\r\n    console.log('props', this.props);\r\n    this.state = {\r\n      value: [],\r\n      isReady: false\r\n      // value: ['alpha', 'beta', 'gamma', 'delta', 'epsillon']\r\n    }\r\n  }\r\n\r\n  // componentWillReceiveProps(nextProps) {\r\n  //   console.log(this.props);\r\n  //   if (nextProps.values) {\r\n  //     this.setState({ values: nextProps.values })\r\n  //   }\r\n  // }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props\r\n    const bitnode = id ? await bitnodeService.getById(id) : await bitnodeService.getEmptyBitnode()\r\n    this.setState({ value: bitnode.ports, isReady: true })\r\n  }\r\n\r\n  Item({ decorateHandle, removable, onChange, onRemove, value }) {\r\n    return (\r\n      <div className='item'>\r\n        {decorateHandle(<span style={{ cursor: 'move' }}>+</span>)}\r\n        <span\r\n          className='mr10'\r\n          onClick={removable ? onRemove : x => x}\r\n          style={{\r\n            cursor: removable ? 'pointer' : 'not-allowed',\r\n            color: removable ? 'black' : 'gray'\r\n          }}>X</span>\r\n        <Input value={value} onChange={onChange} />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  StagingItem({ value, onAdd, canAdd, add, onChange }) {\r\n    return (\r\n      <div className='stagingItem'>\r\n        <span\r\n          className='mr10'\r\n          onClick={canAdd ? onAdd : undefined}\r\n          style={{\r\n            color: canAdd ? 'black' : 'gray',\r\n            cursor: canAdd ? 'pointer' : 'not-allowed'\r\n          }}\r\n        >Add</span>\r\n        <Input value={value} onChange={onChange} />\r\n      </div>\r\n    )\r\n  }\r\n  getProps = () => {\r\n    console.log(this.props.values);\r\n    this.setState({ value: this.props.value })\r\n  }\r\n\r\n  handleChange(ev) {\r\n    console.log('ev', ev);\r\n    // this.props.change(ev)\r\n    // await this.setState({ value: { ...ev.target.value } })\r\n  }\r\n\r\n  render() {\r\n    // const values = this.props.values\r\n    // console.log(values);\r\n    const { value, isReady } = this.state\r\n    return (\r\n      <div className='input-list'>\r\n        {isReady ? <ReactListInput\r\n          name=\"ports\"\r\n          initialStagingValue=''\r\n          onChange={async value => {\r\n            await this.setState({ value })\r\n            console.log(this.state.value);\r\n            this.props.change({ target: { name: 'ports', value } })\r\n          }\r\n          }\r\n          maxItems={30}\r\n          minItems={1}\r\n          ItemComponent={this.Item}\r\n          StagingComponent={this.StagingItem}\r\n          value={value}\r\n        /> : 'Loading...'}\r\n      </div>\r\n    )\r\n  }\r\n}","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\HttpService.js",["162"],"import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production' ?\r\n    '/api/' :\r\n    '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        console.log(res.data);\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log('bad');\r\n        if (err.response.status === 401) {\r\n            console.log('err 401', err);\r\n        }\r\n        console.log(`Had issues ${method}ing to server`, err)\r\n        throw err;\r\n    }\r\n}","C:\\dev\\deliciuos-react-clear\\frontend\\src\\services\\customHooks.js",["163"],"import { useEffect, useState } from \"react\";\r\n\r\nexport function useForm(initialState, cb = function () { }) {\r\n  const [fields, setFields] = useState(initialState);\r\n\r\n  useEffect(() => { cb(fields) }, [fields])\r\n\r\n  return [\r\n    fields,\r\n    function (event) {\r\n      const value = event.target.type === 'number' ? +event.target.value : event.target.value\r\n      setFields({\r\n        ...fields,\r\n        [event.target.name]: value\r\n      });\r\n    },\r\n  ];\r\n}","C:\\dev\\deliciuos-react-clear\\frontend\\src\\cmps\\BitnodePreview\\BitnodePreview.jsx",["164","165"],"import React, { useEffect } from 'react'\nimport './BitnodePreview.scss'\nimport edit from '../../assets/icons/edit.png'\nexport function BitnodePreview({ bitnode, onSelectBitnode }) {\n  useEffect(() => {\n    console.log(bitnode);\n  }, [])\n  function selectBitnode(ev) {\n    ev.stopPropagation()\n    onSelectBitnode(bitnode._id)\n  }\n  return bitnode && (\n    <li className=\"bitnode-preview flex column align-center\">\n      <div className=\"contant flex column\">\n        <div className=\"title-container\">\n          <h3>{bitnode.ipAddress} : {bitnode.port}</h3>\n          <h3>Status: {bitnode.status}</h3>\n        </div>\n        <div className=\"funs flex center width-100 space-around\">\n          <button className=\"btn\" onClick={selectBitnode}><img src={edit} /></button>\n        </div>\n      </div>\n    </li>\n  )\n}\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":32,"nodeType":"172","messageId":"173","endLine":1,"endColumn":40},{"ruleId":"170","severity":1,"message":"174","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":24},{"ruleId":"170","severity":1,"message":"175","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":22},{"ruleId":"170","severity":1,"message":"176","line":9,"column":8,"nodeType":"172","messageId":"173","endLine":9,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":43,"column":8,"nodeType":"179","endLine":43,"endColumn":18,"suggestions":"180"},{"ruleId":"181","severity":1,"message":"182","line":56,"column":62,"nodeType":"183","endLine":56,"endColumn":80},{"ruleId":"170","severity":1,"message":"184","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"185","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":18},{"ruleId":"170","severity":1,"message":"175","line":7,"column":8,"nodeType":"172","messageId":"173","endLine":7,"endColumn":22},{"ruleId":"170","severity":1,"message":"186","line":8,"column":10,"nodeType":"172","messageId":"173","endLine":8,"endColumn":24},{"ruleId":"170","severity":1,"message":"187","line":13,"column":8,"nodeType":"172","messageId":"173","endLine":13,"endColumn":21},{"ruleId":"181","severity":1,"message":"182","line":78,"column":113,"nodeType":"183","endLine":78,"endColumn":131},{"ruleId":"170","severity":1,"message":"188","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":22},{"ruleId":"170","severity":1,"message":"189","line":11,"column":10,"nodeType":"172","messageId":"173","endLine":11,"endColumn":19},{"ruleId":"181","severity":1,"message":"182","line":78,"column":54,"nodeType":"183","endLine":78,"endColumn":72},{"ruleId":"170","severity":1,"message":"184","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":14},{"ruleId":"170","severity":1,"message":"190","line":5,"column":10,"nodeType":"172","messageId":"173","endLine":5,"endColumn":21},{"ruleId":"170","severity":1,"message":"175","line":8,"column":8,"nodeType":"172","messageId":"173","endLine":8,"endColumn":22},{"ruleId":"170","severity":1,"message":"191","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":12},{"ruleId":"170","severity":1,"message":"192","line":11,"column":8,"nodeType":"172","messageId":"173","endLine":11,"endColumn":14},{"ruleId":"177","severity":1,"message":"178","line":19,"column":8,"nodeType":"179","endLine":19,"endColumn":10,"suggestions":"193"},{"ruleId":"170","severity":1,"message":"194","line":22,"column":5,"nodeType":"172","messageId":"173","endLine":22,"endColumn":19},{"ruleId":"170","severity":1,"message":"195","line":23,"column":14,"nodeType":"172","messageId":"173","endLine":23,"endColumn":33},{"ruleId":"170","severity":1,"message":"196","line":26,"column":11,"nodeType":"172","messageId":"173","endLine":26,"endColumn":26},{"ruleId":"170","severity":1,"message":"197","line":29,"column":11,"nodeType":"172","messageId":"173","endLine":29,"endColumn":23},{"ruleId":"170","severity":1,"message":"198","line":30,"column":15,"nodeType":"172","messageId":"173","endLine":30,"endColumn":20},{"ruleId":"170","severity":1,"message":"199","line":35,"column":11,"nodeType":"172","messageId":"173","endLine":35,"endColumn":25},{"ruleId":"170","severity":1,"message":"200","line":2,"column":17,"nodeType":"172","messageId":"173","endLine":2,"endColumn":26},{"ruleId":"170","severity":1,"message":"186","line":6,"column":10,"nodeType":"172","messageId":"173","endLine":6,"endColumn":24},{"ruleId":"201","severity":1,"message":"202","line":7,"column":1,"nodeType":"203","endLine":13,"endColumn":2},{"ruleId":"170","severity":1,"message":"186","line":1,"column":10,"nodeType":"172","messageId":"173","endLine":1,"endColumn":24},{"ruleId":"201","severity":1,"message":"202","line":3,"column":1,"nodeType":"203","endLine":9,"endColumn":2},{"ruleId":"170","severity":1,"message":"204","line":99,"column":10,"nodeType":"172","messageId":"173","endLine":99,"endColumn":17},{"ruleId":"177","severity":1,"message":"205","line":7,"column":6,"nodeType":"179","endLine":7,"endColumn":8,"suggestions":"206"},{"ruleId":"170","severity":1,"message":"207","line":3,"column":8,"nodeType":"172","messageId":"173","endLine":3,"endColumn":10},{"ruleId":"170","severity":1,"message":"208","line":7,"column":10,"nodeType":"172","messageId":"173","endLine":7,"endColumn":22},{"ruleId":"170","severity":1,"message":"209","line":13,"column":12,"nodeType":"172","messageId":"173","endLine":13,"endColumn":17},{"ruleId":"170","severity":1,"message":"210","line":13,"column":19,"nodeType":"172","messageId":"173","endLine":13,"endColumn":27},{"ruleId":"177","severity":1,"message":"211","line":19,"column":7,"nodeType":"179","endLine":19,"endColumn":9,"suggestions":"212"},{"ruleId":"170","severity":1,"message":"213","line":2,"column":8,"nodeType":"172","messageId":"173","endLine":2,"endColumn":12},{"ruleId":"170","severity":1,"message":"214","line":11,"column":8,"nodeType":"172","messageId":"173","endLine":11,"endColumn":12},{"ruleId":"170","severity":1,"message":"215","line":42,"column":7,"nodeType":"172","messageId":"173","endLine":42,"endColumn":12},{"ruleId":"170","severity":1,"message":"216","line":55,"column":10,"nodeType":"172","messageId":"173","endLine":55,"endColumn":19},{"ruleId":"170","severity":1,"message":"217","line":66,"column":11,"nodeType":"172","messageId":"173","endLine":66,"endColumn":16},{"ruleId":"170","severity":1,"message":"218","line":75,"column":11,"nodeType":"172","messageId":"173","endLine":75,"endColumn":31},{"ruleId":"170","severity":1,"message":"219","line":2,"column":10,"nodeType":"172","messageId":"173","endLine":2,"endColumn":16},{"ruleId":"201","severity":1,"message":"202","line":12,"column":1,"nodeType":"203","endLine":25,"endColumn":2},{"ruleId":"177","severity":1,"message":"220","line":6,"column":35,"nodeType":"179","endLine":6,"endColumn":43,"suggestions":"221"},{"ruleId":"177","severity":1,"message":"222","line":7,"column":6,"nodeType":"179","endLine":7,"endColumn":8,"suggestions":"223"},{"ruleId":"181","severity":1,"message":"182","line":20,"column":59,"nodeType":"183","endLine":20,"endColumn":77},"no-native-reassign",["224"],"no-negated-in-lhs",["225"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'BitnodeDetails' is defined but never used.","'bitnodeService' is defined but never used.","'Select' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["226"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'eventBus' is defined but never used.","'storageService' is defined but never used.","'socketService' is defined but never used.","'MultipleSelect' is defined but never used.","'InputList' is defined but never used.","'BitnodeList' is defined but never used.","'hero' is defined but never used.","'search' is defined but never used.",["227"],"'bitnodesToShow' is assigned a value but never used.","'bitnodesToShowByTag' is defined but never used.","'onSelectBitnode' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'field' is assigned a value but never used.","'searchBitnodes' is assigned a value but never used.","'Component' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'_makeId' is defined but never used.","React Hook useEffect has a missing dependency: 'bitnodes'. Either include it or remove the dependency array.",["228"],"'io' is defined but never used.","'loadBitnodes' is defined but never used.","'topic' is assigned a value but never used.","'setTopic' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'bitnodeId'. Either include it or remove the dependency array.",["229"],"'clsx' is defined but never used.","'Chip' is defined but never used.","'names' is assigned a value but never used.","'getStyles' is defined but never used.","'theme' is assigned a value but never used.","'handleChangeMultiple' is assigned a value but never used.","'render' is defined but never used.","React Hook useEffect has a missing dependency: 'cb'. Either include it or remove the dependency array. If 'cb' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["230"],"React Hook useEffect has a missing dependency: 'bitnode'. Either include it or remove the dependency array.",["231"],"no-global-assign","no-unsafe-negation",{"desc":"232","fix":"233"},{"desc":"234","fix":"235"},{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},"Update the dependencies array to be: [dispatch, filterBy]",{"range":"244","text":"245"},"Update the dependencies array to be: [dispatch]",{"range":"246","text":"247"},"Update the dependencies array to be: [bitnodes]",{"range":"248","text":"249"},"Update the dependencies array to be: [bitnodeId]",{"range":"250","text":"251"},"Update the dependencies array to be: [cb, fields]",{"range":"252","text":"253"},"Update the dependencies array to be: [bitnode]",{"range":"254","text":"255"},[1694,1704],"[dispatch, filterBy]",[741,743],"[dispatch]",[243,245],"[bitnodes]",[692,694],"[bitnodeId]",[202,210],"[cb, fields]",[233,235],"[bitnode]"]